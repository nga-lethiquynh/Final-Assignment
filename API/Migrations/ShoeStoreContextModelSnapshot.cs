// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoeStore.API.Data;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ShoeStoreContext))]
    partial class ShoeStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ShoeStore.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("ShoeStore.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Comfortable running shoes",
                            ImageUrl = "/images/1.jpg",
                            Name = "Basas Day Slide - Slip On",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Stylish sandals",
                            ImageUrl = "/images/2.jpg",
                            Name = "Urbas Love+ 24",
                            Price = 50m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Durable sneakers",
                            ImageUrl = "/images/3.jpg",
                            Name = "Vintas Public 2000s",
                            Price = 30m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Currency = "USD",
                            Description = "Comfortable running shoes",
                            ImageUrl = "/images/4.jpg",
                            Name = "Ananas Global Goal",
                            Price = 100m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Currency = "USD",
                            Description = "Stylish sandals",
                            ImageUrl = "/images/5.jpg",
                            Name = "Vintas Vivu - Low Top",
                            Price = 50m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Currency = "USD",
                            Description = "Durable sneakers",
                            ImageUrl = "/images/6.jpg",
                            Name = "Vintas Nauda EXT",
                            Price = 30m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Currency = "USD",
                            Description = "Comfortable running shoes",
                            ImageUrl = "/images/7.jpg",
                            Name = "Graphic Tee",
                            Price = 100m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Currency = "USD",
                            Description = "Stylish sandals",
                            ImageUrl = "/images/8.jpg",
                            Name = "Pattas Tomo - Low Top",
                            Price = 50m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Currency = "USD",
                            Description = "Durable sneakers",
                            ImageUrl = "/images/9.jpg",
                            Name = "Track 6 2.Blues",
                            Price = 30m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Comfortable running shoes",
                            ImageUrl = "/images/10.jpg",
                            Name = "Slip On",
                            Price = 100m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Stylish sandals",
                            ImageUrl = "/images/11.jpg",
                            Name = "High top",
                            Price = 50m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Currency = "USD",
                            Description = "Durable sneakers",
                            ImageUrl = "/images/12.jpg",
                            Name = "Vansic 2000s",
                            Price = 30m
                        });
                });

            modelBuilder.Entity("ShoeStore.API.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Great shoes!",
                            ProductId = 1,
                            Rating = 5
                        },
                        new
                        {
                            Id = 2,
                            Content = "Very comfortable.",
                            ProductId = 1,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("ShoeStore.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "1@testmail.com",
                            Password = "123456",
                            Username = "ngaltq"
                        },
                        new
                        {
                            Id = 2,
                            Email = "2@testmail.com",
                            Password = "123456",
                            Username = "quantd"
                        });
                });

            modelBuilder.Entity("ShoeStore.API.Models.Product", b =>
                {
                    b.HasOne("ShoeStore.API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShoeStore.API.Models.Review", b =>
                {
                    b.HasOne("ShoeStore.API.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShoeStore.API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShoeStore.API.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
